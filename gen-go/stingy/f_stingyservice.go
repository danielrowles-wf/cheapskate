// Autogenerated by Frugal Compiler (1.15.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package stingy

import (
	"bytes"
	"fmt"

	"git.apache.org/thrift.git/lib/go/thrift"
	"github.com/danielrowles-wf/cheapskate/gen-go/workiva_frugal_api"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var _ = workiva_frugal_api.GoUnusedProtection__

type StingyServiceGetQuoteArgs struct {
}

func NewStingyServiceGetQuoteArgs() *StingyServiceGetQuoteArgs {
	return &StingyServiceGetQuoteArgs{}
}

func (p *StingyServiceGetQuoteArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		if err := iprot.Skip(fieldTypeId); err != nil {
			return err
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *StingyServiceGetQuoteArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("GetQuote_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *StingyServiceGetQuoteArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("StingyServiceGetQuoteArgs(%+v)", *p)
}

type StingyServiceGetQuoteResult struct {
	Success *string `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewStingyServiceGetQuoteResult() *StingyServiceGetQuoteResult {
	return &StingyServiceGetQuoteResult{}
}

var StingyServiceGetQuoteResult_Success_DEFAULT string

func (p *StingyServiceGetQuoteResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *StingyServiceGetQuoteResult) GetSuccess() string {
	if !p.IsSetSuccess() {
		return StingyServiceGetQuoteResult_Success_DEFAULT
	}
	return *p.Success
}

func (p *StingyServiceGetQuoteResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *StingyServiceGetQuoteResult) ReadField0(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 0: ", err)
	} else {
		p.Success = &v
	}
	return nil
}

func (p *StingyServiceGetQuoteResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("GetQuote_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField0(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *StingyServiceGetQuoteResult) writeField0(oprot thrift.TProtocol) error {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRING, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := oprot.WriteString(string(*p.Success)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return nil
}

func (p *StingyServiceGetQuoteResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("StingyServiceGetQuoteResult(%+v)", *p)
}
